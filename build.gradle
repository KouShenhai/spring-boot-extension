plugins {
    id "com.livk.dependency"
    id "org.springframework.boot" apply false
}

def bootVersion = libs.versions.springBoot.get()
def bom = List.of(project(":livk-boot-dependencies"), project(":livk-boot-bom"))
def gradleModuleProjects = (subprojects.findAll { it.buildFile.exists() } - bom)
def commonModuleProjects = gradleModuleProjects.findAll {
    it.name.endsWith("-common") ||
            it.name.endsWith("-starter") ||
            it.name.endsWith("-autoconfigure")
}
def springModuleProjects = (gradleModuleProjects - commonModuleProjects)

configure(bom) {
    apply plugin: "java-platform"
    apply plugin: "com.livk.maven.deployed"

    project.extensions.getByType(JavaPlatformExtension.class).allowDependencies()
}

configure(commonModuleProjects) {
    apply plugin: "com.livk.maven.deployed"
    apply plugin: "com.livk.resources"
}

configure(springModuleProjects) {
    apply plugin: "com.livk.build.boot"
}

configure(allprojects) {
    repositories {
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/libs-snapshot/" }
    }

    clean {
        delete "$projectDir/build"
        delete "$projectDir/out"
        delete "$projectDir/bin"
    }

    configurations {
        all {
            resolutionStrategy {
                dependencySubstitution {
                    substitute(module("org.springframework.boot:spring-boot-starter-tomcat"))
                            .using(module("org.springframework.boot:spring-boot-starter-undertow:$bootVersion"))
                }
            }
        }
    }
}

configure(gradleModuleProjects) {
    apply plugin: "com.livk.compile-args"
    apply plugin: "com.livk.dependency"

    dependencies {
        dependencyBom platform(project(":livk-boot-dependencies"))

        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        annotationProcessor "org.projectlombok:lombok"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testAnnotationProcessor "org.projectlombok:lombok"
        testCompileOnly "org.projectlombok:lombok"
    }
}
