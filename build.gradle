plugins {
    id 'base'
    id 'io.spring.nohttp' version("${nohttpVersion}")
    id 'org.springframework.boot' version("${springBootVersion}") apply false
}

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://repo.spring.io/libs-snapshot/' }
    mavenCentral()
    google()
}

ext {
    //BOM项目
    bom = project(":livk-boot-dependencies")
    //含有build.gradle的项目(排除BOM)
    moduleProjects = subprojects.findAll {
        it.buildFile.exists()
    } - bom
    //普通项目
    commonModuleProjects = moduleProjects.findAll {
        it.name.endsWith("-common") || it.name.endsWith("-starter")
    }
    //springboot项目
    springModuleProjects = moduleProjects - commonModuleProjects
}

nohttp {
    allowlistFile = project.file("src/nohttp/allowlist.lines")
    //排除检查文件或者文件夹
    source.exclude "**/bin/**"
    source.exclude "**/build/**"
    source.exclude "**/out/**"
    source.exclude "**/target/**"
}

configure(commonModuleProjects) {
    apply plugin: 'java-library'
}

configure(springModuleProjects) {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
}

configure(allprojects) {
    repositories {
        mavenLocal()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://repo.spring.io/release' }
        maven { url 'https://repo.spring.io/libs-snapshot/' }
        mavenCentral()
        google()
    }

    task cleanBuildDir(type: Delete) {
        allprojects.forEach {
            if (!it.buildFile.exists()) {
                delete "${projectDir}/build"
                delete "${projectDir}/out"
                delete "${projectDir}/bin"
            }
        }
    }
}

configure(moduleProjects) {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.javaformat'
    apply plugin: 'livk.resources.plugin'
    apply from: "$rootDir/gradle/dependency.gradle"

    check {
        dependsOn checkstyleNohttp
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

//    dependencies {
//        implementation(platform(project(":dependencies")))
//    }
}
